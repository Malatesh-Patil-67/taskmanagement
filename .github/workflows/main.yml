name: Build and Deploy Backend

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  pull_request:
    branches:
      - main  # Optionally trigger workflow on PRs to the main branch

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: celonis
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      # Step 4: Build the application
      - name: Build Backend
        run: ./gradlew build --no-daemon

      # Step 5: Run tests
      - name: Run Tests
        run: ./gradlew test --no-daemon

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/taskmanagement:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/taskmanagement:${{ github.sha }}

      # Step 8: Deploy the container (Optional)
      - name: Deploy Container
        run: |
          docker run -d -p 8081:8080 --name taskmanagement-backend ${{ secrets.DOCKER_USERNAME }}/taskmanagement:${{ github.sha }}
